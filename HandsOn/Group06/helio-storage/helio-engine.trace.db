10-29 12:49:04 jdbc[2]: SQLException
org.h2.jdbc.JdbcSQLException: Table LINKRULES not found; SQL statement:
DELETE FROM  LINKRULES; [42S02-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.command.Parser.readTableOrView(Parser.java:3911)
	at org.h2.command.Parser.readTableOrView(Parser.java:3891)
	at org.h2.command.Parser.readSimpleTableFilter(Parser.java:645)
	at org.h2.command.Parser.parseDelete(Parser.java:663)
	at org.h2.command.Parser.parsePrepared(Parser.java:304)
	at org.h2.command.Parser.parse(Parser.java:260)
	at org.h2.command.Parser.parse(Parser.java:232)
	at org.h2.command.Parser.prepareCommand(Parser.java:204)
	at org.h2.engine.Session.prepareLocal(Session.java:172)
	at org.h2.engine.Session.prepareCommand(Session.java:154)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:971)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:1208)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:165)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:311)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:441)
	at helio.materialiser.evaluator.H2Evaluator.initH2Cache(H2Evaluator.java:124)
	at helio.materialiser.HelioMaterialiser.<init>(HelioMaterialiser.java:43)
	at semanticgateway.service.MaterialiserService.addMappings(MaterialiserService.java:23)
	at semanticgateway.service.SemanticDataService.initialiseMaterialiser(SemanticDataService.java:47)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.initialiseMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.firstVirtualization(IndexController.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:309)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:136)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1691)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:398)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:330)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1258)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1246)
	at semanticgateway.SemanticGatewayApplication.main(SemanticGatewayApplication.java:45)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:48)
	at org.springframework.boot.loader.Launcher.launch(Launcher.java:87)
	at org.springframework.boot.loader.Launcher.launch(Launcher.java:50)
	at org.springframework.boot.loader.PropertiesLauncher.main(PropertiesLauncher.java:593)
10-29 12:54:07 jdbc[2]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[3]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[4]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[5]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[6]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[7]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[8]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[9]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[10]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[11]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[12]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[13]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[14]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[15]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[16]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[17]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[18]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[19]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[20]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[21]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[22]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[23]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[24]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[25]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[26]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[27]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[28]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[29]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[30]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[31]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[32]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[33]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[34]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[35]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[36]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[37]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[38]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[39]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[40]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[41]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[42]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[43]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[44]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[45]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[46]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[47]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[48]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[49]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[50]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:54:07 jdbc[51]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:15 jdbc[2]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[3]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[4]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[5]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[6]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[7]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[8]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[9]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[10]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[11]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[12]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[13]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[14]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[15]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[16]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[17]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[18]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[19]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[20]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[21]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[22]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[23]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[24]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[25]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[26]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[27]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[28]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[29]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[30]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[31]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[32]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[33]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[34]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[35]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[36]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[37]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[38]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[39]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[40]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[41]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[42]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[43]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[44]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[45]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[46]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[47]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[48]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[49]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[50]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-29 12:58:16 jdbc[51]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fe22cdb2.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[152]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[153]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[154]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[155]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[156]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[157]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[158]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[159]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[160]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[161]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[162]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[163]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[164]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[165]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[166]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[167]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[168]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[169]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[170]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[171]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[172]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[173]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[174]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[175]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[176]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[177]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[178]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[179]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[180]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[181]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[182]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[183]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[184]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[185]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[186]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[187]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[188]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[189]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[190]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[191]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[192]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[193]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[194]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[195]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[196]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[197]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[198]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[199]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[200]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
10-30 00:28:54 jdbc[201]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6c37d46d.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[2]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[3]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[4]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[5]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[6]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[7]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[8]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[9]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[10]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[11]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[12]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[13]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[14]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[15]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[16]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[17]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[18]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[19]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[20]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[21]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[22]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[23]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[24]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[25]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[26]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[27]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[28]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[29]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[30]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[31]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[32]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[33]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[34]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[35]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[36]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[37]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[38]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[39]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[40]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[41]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[42]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[43]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[44]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[45]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[46]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[47]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[48]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[49]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[50]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 13:22:08 jdbc[51]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$ae4223fa.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[102]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[103]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[104]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[105]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[106]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[107]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[108]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[109]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[110]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[111]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[112]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[113]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[114]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[115]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[116]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[117]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[118]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[119]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[120]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[121]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[122]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[123]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[124]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[125]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[126]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[127]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[128]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[129]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[130]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[131]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[132]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[133]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[134]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[135]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[136]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[137]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[138]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[139]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[140]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[141]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[142]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[143]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[144]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[145]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[146]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[147]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[148]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[149]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[150]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 19:45:29 jdbc[151]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$adcc24ce.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[102]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[103]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[104]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[105]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[106]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[107]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[108]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[109]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[110]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[111]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[112]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[113]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[114]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[115]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[116]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[117]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[118]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[119]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[120]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[121]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[122]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[123]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[124]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[125]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[126]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[127]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[128]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[129]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[130]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[131]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[132]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[133]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[134]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[135]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[136]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[137]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[138]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[139]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[140]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[141]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[142]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[143]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[144]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[145]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[146]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[147]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[148]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[149]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[150]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-11 23:47:44 jdbc[151]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$4822e499.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[2]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[3]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[4]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[5]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[6]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[7]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[8]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[9]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[10]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[11]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[12]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[13]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[14]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[15]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[16]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[17]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[18]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[19]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[20]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[21]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[22]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[23]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[24]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[25]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[26]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[27]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[28]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[29]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[30]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[31]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[32]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[33]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[34]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[35]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[36]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[37]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[38]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[39]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[40]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[41]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[42]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[43]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[44]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[45]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[46]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[47]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[48]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[49]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[50]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:07:39 jdbc[51]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$6e71b6b0.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[2]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[3]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[4]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[5]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[6]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[7]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[8]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[9]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[10]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[11]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[12]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[13]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[14]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[15]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[16]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[17]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[18]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[19]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[20]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[21]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[22]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[23]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[24]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[25]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[26]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[27]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[28]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[29]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[30]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[31]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[32]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[33]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[34]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[35]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[36]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[37]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[38]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[39]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[40]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[41]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[42]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[43]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[44]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[45]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[46]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[47]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[48]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[49]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[50]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:09:24 jdbc[51]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$184b9d8e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[2]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[3]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[4]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[5]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[6]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[7]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[8]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[9]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[10]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[11]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[12]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[13]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[14]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[15]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[16]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[17]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[18]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[19]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[20]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[21]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[22]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[23]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[24]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[25]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[26]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[27]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[28]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[29]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[30]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[31]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[32]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[33]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[34]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[35]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[36]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[37]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[38]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[39]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[40]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[41]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[42]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[43]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[44]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[45]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[46]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[47]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[48]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[49]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[50]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:11:40 jdbc[51]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$e9cd53cf.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[2]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[3]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[4]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[5]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[6]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[7]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[8]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[9]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[10]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[11]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[12]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[13]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[14]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[15]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[16]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[17]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[18]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[19]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[20]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[21]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[22]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[23]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[24]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[25]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[26]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[27]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[28]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[29]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[30]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[31]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[32]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[33]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[34]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[35]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[36]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[37]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[38]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[39]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[40]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[41]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[42]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[43]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[44]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[45]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[46]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[47]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[48]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[49]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[50]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:13:26 jdbc[51]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$fb37864b.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[2]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[3]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[4]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[5]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[6]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[7]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[8]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[9]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[10]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[11]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[12]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[13]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[14]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[15]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[16]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[17]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[18]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[19]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[20]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[21]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[22]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[23]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[24]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[25]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[26]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[27]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[28]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[29]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[30]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[31]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[32]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[33]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[34]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[35]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[36]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[37]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[38]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[39]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[40]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[41]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[42]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[43]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[44]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[45]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[46]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[47]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[48]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[49]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[50]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:15:42 jdbc[51]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[2]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[3]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[4]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[5]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[6]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[7]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[8]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[9]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[10]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[11]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[12]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[13]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[14]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[15]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[16]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[17]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[18]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[19]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[20]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[21]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[22]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[23]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[24]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[25]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[26]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[27]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[28]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[29]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[30]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[31]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[32]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[33]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[34]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[35]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[36]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[37]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[38]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[39]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[40]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[41]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[42]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[43]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[44]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[45]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[46]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[47]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[48]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[49]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[50]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:18:50 jdbc[51]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:44 jdbc[2]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:44 jdbc[3]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:44 jdbc[4]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:44 jdbc[5]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:44 jdbc[6]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:44 jdbc[7]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:44 jdbc[8]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:44 jdbc[9]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:44 jdbc[10]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:44 jdbc[11]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:44 jdbc[12]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:44 jdbc[13]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:44 jdbc[14]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:44 jdbc[15]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:44 jdbc[16]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:44 jdbc[17]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:45 jdbc[18]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:45 jdbc[19]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:45 jdbc[20]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:45 jdbc[21]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:45 jdbc[22]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:45 jdbc[23]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:45 jdbc[24]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:45 jdbc[25]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:45 jdbc[26]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:45 jdbc[27]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:45 jdbc[28]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:45 jdbc[29]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:45 jdbc[30]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:45 jdbc[31]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:45 jdbc[32]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:45 jdbc[33]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:45 jdbc[34]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:45 jdbc[35]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:45 jdbc[36]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:45 jdbc[37]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:45 jdbc[38]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:45 jdbc[39]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:45 jdbc[40]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:45 jdbc[41]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:45 jdbc[42]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:45 jdbc[43]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:45 jdbc[44]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:45 jdbc[45]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:45 jdbc[46]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:45 jdbc[47]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:45 jdbc[48]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:45 jdbc[49]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:45 jdbc[50]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:21:45 jdbc[51]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$1c5b96c1.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[2]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[3]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[4]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[5]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[6]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[7]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[8]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[9]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[10]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[11]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[12]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[13]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[14]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[15]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[16]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[17]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[18]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[19]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[20]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[21]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[22]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[23]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[24]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[25]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[26]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[27]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[28]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[29]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[30]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[31]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[32]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[33]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[34]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[35]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[36]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[37]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[38]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[39]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[40]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[41]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[42]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[43]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[44]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[45]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[46]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[47]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[48]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[49]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[50]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:29:26 jdbc[51]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$5359479e.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[2]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[3]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[4]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[5]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[6]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[7]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[8]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[9]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[10]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[11]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[12]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[13]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[14]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[15]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[16]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[17]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[18]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[19]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[20]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[21]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[22]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[23]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[24]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[25]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[26]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[27]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[28]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[29]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[30]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[31]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[32]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[33]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[34]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[35]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[36]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[37]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[38]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[39]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[40]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[41]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[42]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[43]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[44]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[45]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[46]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[47]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[48]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[49]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[50]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
11-12 00:39:55 jdbc[51]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-60]
	at org.h2.message.Message.getSQLException(Message.java:84)
	at org.h2.message.Message.getSQLException(Message.java:88)
	at org.h2.message.Message.getSQLException(Message.java:66)
	at org.h2.message.Message.getSQLException(Message.java:109)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1174)
	at org.h2.jdbc.JdbcConnection.createStatement(JdbcConnection.java:93)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:156)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:179)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at helio.materialiser.evaluator.H2Evaluator.closeH2Cache(H2Evaluator.java:440)
	at helio.materialiser.HelioMaterialiser.close(HelioMaterialiser.java:49)
	at semanticgateway.service.MaterialiserService.close(MaterialiserService.java:34)
	at semanticgateway.service.SemanticDataService.finilizeMaterialiser(SemanticDataService.java:55)
	at semanticgateway.service.SemanticDataService$$FastClassBySpringCGLIB$$32db5cfc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at semanticgateway.service.SemanticDataService$$EnhancerBySpringCGLIB$$f3092772.finilizeMaterialiser(<generated>)
	at semanticgateway.controller.IndexController.closeEngine(IndexController.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:324)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:156)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
